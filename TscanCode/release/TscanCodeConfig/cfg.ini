################################################################
###通过配置来屏蔽自定义的空指针检查以减少误报
###该配置可以匹配函数以及宏检查##
###比如自定义的函数或者宏为ASSERT_RETURN_VOID(a,b,c)
###需要检查的指针为b，那么配置如下
###ASSERT_RETURN_VOID=2
###即等号前面为函数或者宏名，等号后面需要判断的指针为该函数或者宏的第几个参数
###注意：#为注释
################################################################
[CustomNullPointerCheckList]

################################################################
#配置自定义函数，强制工具不对该函数返回的指针进行检查
#使用场景 ：
#variant* v=gettime();
#v->get_child();//这里会报空指针错误
#如果确定gettime()函数返回值一定不为空，那么可以在CustomNullPointerCheckList2.ini中配置gettime()

#配置函数时，按照如下模式配置：
#classname::functionname(type1 arg1,type2 arg2,...)
#如果不确定classname,则省略，直接配置为：functionname(type1 arg1,type2 arg2,...)
#注意：参数类型及个数一定不能省略或缺少

#配置示例如下：
#front()
#basename(char*)
#localtime()
#localtime(time_t*)
#malloc(sizeof(int))
#appSystemMalloc(const SIZE_T StackTraceSize)
#classA::funcA(int a)
#classB::funcB()
#TSC_FuncRetNULL::FuncRetNULL_sample_step1()
#TSC_FuncRetNULL::FuncRetNULL_sample_step1(TSC_FuncRetNULL* pTemp, int a, int b, int iTemp)
#CTaskQQPackageSys::ClearQQPackage(std::map< std :: string , std :: vector < uint64_t > * >& rstPackage)

#注"#"号表示后面的内容为注释，实际配置时不要加#
################################################################
[CustomNullPointerCheckList2]

################################################################
###配置带有跳转语句的宏
###比如自定义的函数或者宏为#define THROW_EXCEPTION throw,  那么就配置：
###THROW_EXCEPTION
###此处throw后,代码之后的解引用不会被当作空指针解引用而误报
###注意：#为注释
################################################################
[JumpMacros]
