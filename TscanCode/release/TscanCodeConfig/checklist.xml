<?xml version="1.0" encoding="utf-8" ?>
<config>
    <code_trace isopen="1" desc="代码追踪">
	</code_trace>
	<showfuncinfo isopen="0" desc="报错信息中显示错误所在函数信息">
	</showfuncinfo>
	<logic isopen="1" desc="逻辑错误">
		<subid name="uninitvar"								isopen="1" desc="变量未初始化"/>
		<subid name="assignIf"								isopen="1" desc="不匹配的赋值或比较，导致结果永远为真或假"/>
		<subid name="NoFirstCase" 							isopen="1" desc="case语句中缺少第一个case"/>
		<subid name="RecursiveFunc" 						isopen="1" desc="函数递归，可能影响性能或出现死循环"/>
		<subid name="comparison" 							isopen="1" desc="等号左右两边不匹配"/>
		<subid name="multiCondition" 						isopen="1" desc="表达式总是false，因为else if匹配前一个条件"/>
		<subid name="DuplicateIf" 							isopen="1" desc="if判断条件重复"/>
		<subid name="DuplicateBranch" 						isopen="1" desc="分支内容重复"/>
		<subid name="DuplicateExpression" 					isopen="1" desc="表达式重复如，比如一个if条件中的使用了相同的条件"/>
		<subid name="clarifyCondition"						isopen="1" desc="位运算与比较符号可能带来优先级错误，导致运算结果不正确，建议使用括号注明其正确的运算优先级"/>
		<subid name="SwitchNoBreakUP" 						isopen="1" desc="break高级检查，忽略最后一个case的break忽略连续写case的情况"/>
		<subid name="ComparisonOfBoolExpressionWithInt" 	isopen="1" desc="将布尔值与int类型值进行比较，如:if(!x==4)"/>
		<subid name="oppositeInnerCondition" 				isopen="1" desc="相反的内部条件，导致代码不可达"/>
		<subid name="BitwiseOnBoolean" 						isopen="1" desc="布尔值用在了位运算中"/>
		<subid name="IncorrectLogicOperator"				isopen="1" desc="错误的逻辑运算，如：总是真，或总是假"/>
		<subid name="ComparisonOfBoolWithInt" 				isopen="1" desc="将布尔值与int类型值进行比较，如:if(!x==4)"/>
		<subid name="ComparisonOfBoolWithBool" 				isopen="1" desc="bool类型变量间的比较，函数返回值是bool变量，却对该类函数使用关系运算符"/>
		<subid name="InvalidVarArgs"						isopen="1" desc="可变参数函数调用时，检查参数是否匹配"/>
	</logic>
	
	<Suspicious isopen="1" desc="可疑的代码">
		<subid name="thisSubtraction"						isopen="1" desc="this用于减法运算的表达式，如：写成了this-x"/>
		<subid name="UnconditionalBreakinLoop"				isopen="1" desc="循环中没有任何条件的break，导致循环只执行一次"/>
		<subid name="AssignmentInAssert"					isopen="1" desc="在断言中对变量进行赋值，多半是写错位置了。（断言只在debug中有效的宏）"/>
		<subid name="SuspiciousSemicolon"					isopen="1" desc="可疑的分号使用，在if for while语句后直接跟分号"/>
		<subid name="AssignBoolToPointer"					isopen="1" desc="将bool值赋值给指针，有可能是bool变量声明时多加了个*，如void foo(bool *p) {p = false;}"/>
		<subid name="IfCondition"							isopen="1" desc="if判断条件中含有可疑的=号"/>
		<subid name="strPlusChar"							isopen="1" desc="字符串与字符变量相加，一般为错误使用单引号。字符串与字符变量相加，相当于字符串指针偏移N（N为字符变量的ASC码值，char相当于整数）"/>
		<subid name="MemsetZeroBytes"						isopen="1" desc="调用memset函数但只填充0字节，一般是第2和3个参数写反了。如：memset(p, sizeof(p), 0)，正确写法是memset(p,0,sizeof(p))"/>
		<subid name="SuspiciousPriority"					isopen="1" desc="可疑的优先级"/>
		<subid name="suspiciousfor"							isopen="1" desc="可疑的for循环，可能是死循环"/>
		<subid name="autovar"								isopen="1" desc="自由变量，通常发生在错误的返回了局部变量"/>
		<subid name="wrongvarinfor"							isopen="1" desc="在for语句中变量使用错误，可能导致死循环"/>
        <subid name="BoolFuncReturn"						isopen="1" desc="bool返回值类型的函数返回值超出bool类型的范围"/>
        <subid name="suspiciousArrayIndex"					isopen="1" desc="数组下标使用可能存在问题"/>
		<subid name="invalidIterator"						isopen="1" desc="错误的使用迭代器，包括删除迭代器错误，使用错误的迭代器容器等"/>
	</Suspicious>
	
	<compute isopen="1" desc="运算错误">
		
		<subid name="AssignAndCompute"						isopen="1" desc="检查+=误写成=+的情况，一般为手抖写错，导致结果跟预期不一致"/>
		<subid name="UnsignedDivision"						isopen="1" desc="除数和被除数分别是有符号和无符号类型"/>
		<subid name="ModuloAlwaysTrueFalse"					isopen="1" desc="取模结果的最大值小于被取模的值，导致表达式总是真或总是假。如if(var%4==4)，一般是手抖把边界值写错了"/>
		<subid name="ZeroDivision"							isopen="1" desc="除数为0"/>
		<subid name="NegativeBitwiseShift"					isopen="1" desc="对负的右操作数进行位移运算"/>
		<subid name="IncrementBoolean"						isopen="1" desc="对bool变量使用自增，导致bool变量的值可能不符合预期。如：bool bValue = true;bValue++;"/>
		<subid name="SizeofForArrayParameter"				isopen="1" desc="数组作为函数参数时，对数组用sizeof计算"/>
		<subid name="SizeofForNumericParameter"				isopen="1" desc="对一个数字常量使用sizeof"/>
		<subid name="sizeofsizeof"							isopen="1" desc="sizeofsizeof，很可能是手抖多复制了一个，如  int i = sizeof sizeof char"/>
		<subid name="SizeofForPointerSize"					isopen="1" desc="对指针使用了sizeof，得到的不是实际数据的大小，而是指针大小（4字节）"/>
		<subid name="Unsignedlessthanzero"					isopen="1" desc="无符号数在判断的时候，判断其值小于0，这可能是一个错误或者是无意义的代码"/>
	</compute>
	<nullpointer isopen="1" desc="空指针">
		<subid name="dereferenceIfNull"						isopen="1" desc="if判断指针等于NULL成立时解引用，必然crash"/>
		<subid name="dereferenceBeforeCheck"				isopen="1" desc="指针先解引用，再进行判空"/>
		<subid name="nullPointerLinkedList"					isopen="1" desc="链表循环内直接访问了link->Next"/>
	</nullpointer>
	<bufoverrun isopen="1" desc="越界错误">
		<subid name="formatbufoverrun"						isopen="1" desc="sprintf_s中越界错误"/>
	</bufoverrun>
	
	<memleak isopen="1" desc="内存泄漏">
	</memleak>
</config>
